rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /facilities/{facilityId} {
      allow read: if true;
      // Allow write if user is authenticated and owns the facility
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.ownerId || isAdmin());
    }
    
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    match /payments/{paymentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }

    match /claims/{claimId} {
      // Anyone can read claims
      allow read: if true;
      
      // Authenticated users can create claims
      allow create: if request.auth != null;
      
      // Only claim owner can update their own claim
      // Admins can update any claim
      allow update: if request.auth != null &&
        (request.auth.uid == resource.data.userId || isAdmin());
      
      // Only admins can delete claims
      allow delete: if request.auth != null && isAdmin();
    }
  }
}
